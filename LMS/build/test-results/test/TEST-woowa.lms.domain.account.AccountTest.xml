<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="woowa.lms.domain.account.AccountTest" tests="1" skipped="0" failures="0" errors="0" timestamp="2020-02-25T08:11:56" hostname="DESKTOP-G3VUD1B" time="0.048">
  <properties/>
  <testcase name="testGetName()" classname="woowa.lms.domain.account.AccountTest" time="0.048"/>
  <system-out><![CDATA[Hibernate: 
    
    drop table Account if exists
Hibernate: 
    
    drop table Admin if exists
Hibernate: 
    
    drop table Customer if exists
Hibernate: 
    
    drop table Library if exists
Hibernate: 
    
    drop table Owner if exists
Hibernate: 
    
    drop sequence if exists hibernate_sequence
Hibernate: create sequence hibernate_sequence start with 1 increment by 1
Hibernate: 
    
    create table Account (
       type varchar(31) not null,
        account_id varchar(255) not null,
        contact varchar(255),
        name varchar(255),
        pw varchar(255),
        primary key (account_id)
    )
Hibernate: 
    
    create table Admin (
       account_id varchar(255) not null,
        primary key (account_id)
    )
Hibernate: 
    
    create table Customer (
       account_id varchar(255) not null,
        primary key (account_id)
    )
Hibernate: 
    
    create table Library (
       id bigint not null,
        name varchar(255),
        primary key (id)
    )
Hibernate: 
    
    create table Owner (
       account_id varchar(255) not null,
        primary key (account_id)
    )
Hibernate: 
    
    alter table Admin 
       add constraint FKqxwyngf0c2kvw8kwgxpelw1xw 
       foreign key (account_id) 
       references Account
Hibernate: 
    
    alter table Customer 
       add constraint FKeqp4idmxgvl1jq3bm0rkfiqy8 
       foreign key (account_id) 
       references Account
Hibernate: 
    
    alter table Owner 
       add constraint FKo5u07a2pu169owxatiybc43 
       foreign key (account_id) 
       references Account
Hibernate: 
    /* insert woowa.lms.domain.account.Owner
        */ insert 
        into
            Account
            (contact, name, pw, type, account_id) 
        values
            (?, ?, ?, 'owner', ?)
Hibernate: 
    /* insert woowa.lms.domain.account.Owner
        */ insert 
        into
            Owner
            (account_id) 
        values
            (?)
]]></system-out>
  <system-err><![CDATA[2월 25, 2020 5:11:55 오후 org.hibernate.jpa.internal.util.LogHelper logPersistenceUnitInformation
INFO: HHH000204: Processing PersistenceUnitInfo [name: lms]
2월 25, 2020 5:11:55 오후 org.hibernate.Version logVersion
INFO: HHH000412: Hibernate Core {5.4.11.Final}
2월 25, 2020 5:11:55 오후 org.hibernate.annotations.common.reflection.java.JavaReflectionManager <clinit>
INFO: HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2월 25, 2020 5:11:55 오후 org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl configure
WARN: HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2월 25, 2020 5:11:55 오후 org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl buildCreator
INFO: HHH10001005: using driver [org.h2.Driver] at URL [jdbc:h2:tcp://localhost/~/lms]
2월 25, 2020 5:11:55 오후 org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl buildCreator
INFO: HHH10001001: Connection properties: {password=****, user=dm}
2월 25, 2020 5:11:55 오후 org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl buildCreator
INFO: HHH10001003: Autocommit mode: false
2월 25, 2020 5:11:55 오후 org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections <init>
INFO: HHH000115: Hibernate connection pool size: 20 (min=1)
2월 25, 2020 5:11:56 오후 org.hibernate.dialect.Dialect <init>
INFO: HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
2월 25, 2020 5:11:56 오후 org.hibernate.cfg.AnnotationBinder processJoinedDiscriminatorProperties
WARN: HHH000457: Joined inheritance hierarchy [woowa.lms.domain.account.Account] defined explicit @DiscriminatorColumn.  Legacy Hibernate behavior was to ignore the @DiscriminatorColumn.  However, as part of issue HHH-6911 we now apply the explicit @DiscriminatorColumn.  If you would prefer the legacy behavior, enable the `hibernate.discriminator.ignore_explicit_for_joined` setting (hibernate.discriminator.ignore_explicit_for_joined=true)
2월 25, 2020 5:11:56 오후 org.hibernate.resource.transaction.backend.jdbc.internal.DdlTransactionIsolatorNonJtaImpl getIsolatedConnection
INFO: HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@7a46ff15] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2월 25, 2020 5:11:56 오후 org.hibernate.resource.transaction.backend.jdbc.internal.DdlTransactionIsolatorNonJtaImpl getIsolatedConnection
INFO: HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@4253dcb5] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2월 25, 2020 5:11:56 오후 org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator initiateService
INFO: HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
]]></system-err>
</testsuite>
